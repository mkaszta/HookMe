@using HookMe.Models
@model HookMe.Models.RegisterViewModel



@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <section id="work">
        <div class="container">
            <div class="row animate-in" data-anim-type="fade-in-up" id="work-div">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="work-wrapper">
                        <center><h4>Rejestracja</h4></center>
                        <hr />
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                <label class="radio radio-inline">
                                    @Html.RadioButtonFor(model => @Model.Gender, 0) Kobieta
                                </label>
                                <label class="radio radio-inline">
                                    @Html.RadioButtonFor(model => @Model.Gender, 1) Mężczyzna
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Adult, new { @class = "col-md-2 control-label" })<div class="col-md-10">
                                @Html.CheckBoxFor(model => model.Adult, new { @checked = "checked" })
                                Oświadczam, że jestem pełnoletni(a)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.MailAcceptance, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.CheckBoxFor(model => model.MailAcceptance, new { @checked = "checked" })
                                Zgadzam się, na przesyłanie informacji o HookMe drogą mailową.
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-default" value="Zarejestruj" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
